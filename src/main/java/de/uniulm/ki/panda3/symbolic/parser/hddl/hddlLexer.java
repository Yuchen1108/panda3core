// Generated from /home/dhoeller/IdeaProjects/panda3core/src/main/java/de/uniulm/ki/panda3/symbolic/parser/hddl/hddl.g4 by ANTLR 4.5
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class hddlLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.5", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, T__32=33, T__33=34, T__34=35, T__35=36, T__36=37, T__37=38, 
		REQUIRE_NAME=39, VAR_NAME=40, NAME=41, COMMENT=42, WS=43;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
		"T__33", "T__34", "T__35", "T__36", "T__37", "REQUIRE_NAME", "VAR_NAME", 
		"NAME", "COMMENT", "WS"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "'('", "'define'", "'domain'", "')'", "':requirements'", "':types'", 
		"'-'", "':constants'", "':predicates'", "':task'", "':parameters'", "':precondition'", 
		"':effect'", "':method'", "':subtasks'", "':tasks'", "':ordered-subtasks'", 
		"':ordered-tasks'", "':ordering'", "':order'", "':constraints'", "'and'", 
		"'<'", "'not'", "'='", "':action'", "'or'", "'(exists'", "'forall'", "'when'", 
		"'(='", "'problem'", "':domain'", "':objects'", "':init'", "':goal'", 
		"':htn'", "':htnti'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, "REQUIRE_NAME", "VAR_NAME", "NAME", "COMMENT", "WS"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override
	@NotNull
	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public hddlLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "hddl.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2-\u0199\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3"+
		"\5\3\5\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\7\3\7"+
		"\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3"+
		"\t\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13"+
		"\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r"+
		"\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16"+
		"\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20"+
		"\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\21\3\21\3\21"+
		"\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22"+
		"\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23"+
		"\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\24"+
		"\3\24\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\26"+
		"\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\30\3\30\3\31"+
		"\3\31\3\31\3\31\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\34"+
		"\3\34\3\34\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\36\3\36\3\36\3\36"+
		"\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3\37\3 \3 \3 \3!\3!\3!\3!\3!\3!\3"+
		"!\3!\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3#\3#\3#\3#\3#\3#\3#\3#\3#\3$\3$"+
		"\3$\3$\3$\3$\3%\3%\3%\3%\3%\3%\3&\3&\3&\3&\3&\3\'\3\'\3\'\3\'\3\'\3\'"+
		"\3\'\3(\3(\3(\3)\3)\3)\3*\3*\7*\u0181\n*\f*\16*\u0184\13*\3+\3+\7+\u0188"+
		"\n+\f+\16+\u018b\13+\3+\3+\5+\u018f\n+\3+\3+\3,\6,\u0194\n,\r,\16,\u0195"+
		"\3,\3,\2\2-\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33"+
		"\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67"+
		"\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-\3\2\6\4\2C\\c|\7\2//\62;C\\"+
		"aac|\4\2\f\f\17\17\5\2\13\f\17\17\"\"\u019c\2\3\3\2\2\2\2\5\3\2\2\2\2"+
		"\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2"+
		"\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2"+
		"\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2"+
		"\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2"+
		"\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2"+
		"\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2"+
		"M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\3Y\3"+
		"\2\2\2\5[\3\2\2\2\7b\3\2\2\2\ti\3\2\2\2\13k\3\2\2\2\ry\3\2\2\2\17\u0080"+
		"\3\2\2\2\21\u0082\3\2\2\2\23\u008d\3\2\2\2\25\u0099\3\2\2\2\27\u009f\3"+
		"\2\2\2\31\u00ab\3\2\2\2\33\u00b9\3\2\2\2\35\u00c1\3\2\2\2\37\u00c9\3\2"+
		"\2\2!\u00d3\3\2\2\2#\u00da\3\2\2\2%\u00ec\3\2\2\2\'\u00fb\3\2\2\2)\u0105"+
		"\3\2\2\2+\u010c\3\2\2\2-\u0119\3\2\2\2/\u011d\3\2\2\2\61\u011f\3\2\2\2"+
		"\63\u0123\3\2\2\2\65\u0125\3\2\2\2\67\u012d\3\2\2\29\u0130\3\2\2\2;\u0138"+
		"\3\2\2\2=\u013f\3\2\2\2?\u0144\3\2\2\2A\u0147\3\2\2\2C\u014f\3\2\2\2E"+
		"\u0157\3\2\2\2G\u0160\3\2\2\2I\u0166\3\2\2\2K\u016c\3\2\2\2M\u0171\3\2"+
		"\2\2O\u0178\3\2\2\2Q\u017b\3\2\2\2S\u017e\3\2\2\2U\u0185\3\2\2\2W\u0193"+
		"\3\2\2\2YZ\7*\2\2Z\4\3\2\2\2[\\\7f\2\2\\]\7g\2\2]^\7h\2\2^_\7k\2\2_`\7"+
		"p\2\2`a\7g\2\2a\6\3\2\2\2bc\7f\2\2cd\7q\2\2de\7o\2\2ef\7c\2\2fg\7k\2\2"+
		"gh\7p\2\2h\b\3\2\2\2ij\7+\2\2j\n\3\2\2\2kl\7<\2\2lm\7t\2\2mn\7g\2\2no"+
		"\7s\2\2op\7w\2\2pq\7k\2\2qr\7t\2\2rs\7g\2\2st\7o\2\2tu\7g\2\2uv\7p\2\2"+
		"vw\7v\2\2wx\7u\2\2x\f\3\2\2\2yz\7<\2\2z{\7v\2\2{|\7{\2\2|}\7r\2\2}~\7"+
		"g\2\2~\177\7u\2\2\177\16\3\2\2\2\u0080\u0081\7/\2\2\u0081\20\3\2\2\2\u0082"+
		"\u0083\7<\2\2\u0083\u0084\7e\2\2\u0084\u0085\7q\2\2\u0085\u0086\7p\2\2"+
		"\u0086\u0087\7u\2\2\u0087\u0088\7v\2\2\u0088\u0089\7c\2\2\u0089\u008a"+
		"\7p\2\2\u008a\u008b\7v\2\2\u008b\u008c\7u\2\2\u008c\22\3\2\2\2\u008d\u008e"+
		"\7<\2\2\u008e\u008f\7r\2\2\u008f\u0090\7t\2\2\u0090\u0091\7g\2\2\u0091"+
		"\u0092\7f\2\2\u0092\u0093\7k\2\2\u0093\u0094\7e\2\2\u0094\u0095\7c\2\2"+
		"\u0095\u0096\7v\2\2\u0096\u0097\7g\2\2\u0097\u0098\7u\2\2\u0098\24\3\2"+
		"\2\2\u0099\u009a\7<\2\2\u009a\u009b\7v\2\2\u009b\u009c\7c\2\2\u009c\u009d"+
		"\7u\2\2\u009d\u009e\7m\2\2\u009e\26\3\2\2\2\u009f\u00a0\7<\2\2\u00a0\u00a1"+
		"\7r\2\2\u00a1\u00a2\7c\2\2\u00a2\u00a3\7t\2\2\u00a3\u00a4\7c\2\2\u00a4"+
		"\u00a5\7o\2\2\u00a5\u00a6\7g\2\2\u00a6\u00a7\7v\2\2\u00a7\u00a8\7g\2\2"+
		"\u00a8\u00a9\7t\2\2\u00a9\u00aa\7u\2\2\u00aa\30\3\2\2\2\u00ab\u00ac\7"+
		"<\2\2\u00ac\u00ad\7r\2\2\u00ad\u00ae\7t\2\2\u00ae\u00af\7g\2\2\u00af\u00b0"+
		"\7e\2\2\u00b0\u00b1\7q\2\2\u00b1\u00b2\7p\2\2\u00b2\u00b3\7f\2\2\u00b3"+
		"\u00b4\7k\2\2\u00b4\u00b5\7v\2\2\u00b5\u00b6\7k\2\2\u00b6\u00b7\7q\2\2"+
		"\u00b7\u00b8\7p\2\2\u00b8\32\3\2\2\2\u00b9\u00ba\7<\2\2\u00ba\u00bb\7"+
		"g\2\2\u00bb\u00bc\7h\2\2\u00bc\u00bd\7h\2\2\u00bd\u00be\7g\2\2\u00be\u00bf"+
		"\7e\2\2\u00bf\u00c0\7v\2\2\u00c0\34\3\2\2\2\u00c1\u00c2\7<\2\2\u00c2\u00c3"+
		"\7o\2\2\u00c3\u00c4\7g\2\2\u00c4\u00c5\7v\2\2\u00c5\u00c6\7j\2\2\u00c6"+
		"\u00c7\7q\2\2\u00c7\u00c8\7f\2\2\u00c8\36\3\2\2\2\u00c9\u00ca\7<\2\2\u00ca"+
		"\u00cb\7u\2\2\u00cb\u00cc\7w\2\2\u00cc\u00cd\7d\2\2\u00cd\u00ce\7v\2\2"+
		"\u00ce\u00cf\7c\2\2\u00cf\u00d0\7u\2\2\u00d0\u00d1\7m\2\2\u00d1\u00d2"+
		"\7u\2\2\u00d2 \3\2\2\2\u00d3\u00d4\7<\2\2\u00d4\u00d5\7v\2\2\u00d5\u00d6"+
		"\7c\2\2\u00d6\u00d7\7u\2\2\u00d7\u00d8\7m\2\2\u00d8\u00d9\7u\2\2\u00d9"+
		"\"\3\2\2\2\u00da\u00db\7<\2\2\u00db\u00dc\7q\2\2\u00dc\u00dd\7t\2\2\u00dd"+
		"\u00de\7f\2\2\u00de\u00df\7g\2\2\u00df\u00e0\7t\2\2\u00e0\u00e1\7g\2\2"+
		"\u00e1\u00e2\7f\2\2\u00e2\u00e3\7/\2\2\u00e3\u00e4\7u\2\2\u00e4\u00e5"+
		"\7w\2\2\u00e5\u00e6\7d\2\2\u00e6\u00e7\7v\2\2\u00e7\u00e8\7c\2\2\u00e8"+
		"\u00e9\7u\2\2\u00e9\u00ea\7m\2\2\u00ea\u00eb\7u\2\2\u00eb$\3\2\2\2\u00ec"+
		"\u00ed\7<\2\2\u00ed\u00ee\7q\2\2\u00ee\u00ef\7t\2\2\u00ef\u00f0\7f\2\2"+
		"\u00f0\u00f1\7g\2\2\u00f1\u00f2\7t\2\2\u00f2\u00f3\7g\2\2\u00f3\u00f4"+
		"\7f\2\2\u00f4\u00f5\7/\2\2\u00f5\u00f6\7v\2\2\u00f6\u00f7\7c\2\2\u00f7"+
		"\u00f8\7u\2\2\u00f8\u00f9\7m\2\2\u00f9\u00fa\7u\2\2\u00fa&\3\2\2\2\u00fb"+
		"\u00fc\7<\2\2\u00fc\u00fd\7q\2\2\u00fd\u00fe\7t\2\2\u00fe\u00ff\7f\2\2"+
		"\u00ff\u0100\7g\2\2\u0100\u0101\7t\2\2\u0101\u0102\7k\2\2\u0102\u0103"+
		"\7p\2\2\u0103\u0104\7i\2\2\u0104(\3\2\2\2\u0105\u0106\7<\2\2\u0106\u0107"+
		"\7q\2\2\u0107\u0108\7t\2\2\u0108\u0109\7f\2\2\u0109\u010a\7g\2\2\u010a"+
		"\u010b\7t\2\2\u010b*\3\2\2\2\u010c\u010d\7<\2\2\u010d\u010e\7e\2\2\u010e"+
		"\u010f\7q\2\2\u010f\u0110\7p\2\2\u0110\u0111\7u\2\2\u0111\u0112\7v\2\2"+
		"\u0112\u0113\7t\2\2\u0113\u0114\7c\2\2\u0114\u0115\7k\2\2\u0115\u0116"+
		"\7p\2\2\u0116\u0117\7v\2\2\u0117\u0118\7u\2\2\u0118,\3\2\2\2\u0119\u011a"+
		"\7c\2\2\u011a\u011b\7p\2\2\u011b\u011c\7f\2\2\u011c.\3\2\2\2\u011d\u011e"+
		"\7>\2\2\u011e\60\3\2\2\2\u011f\u0120\7p\2\2\u0120\u0121\7q\2\2\u0121\u0122"+
		"\7v\2\2\u0122\62\3\2\2\2\u0123\u0124\7?\2\2\u0124\64\3\2\2\2\u0125\u0126"+
		"\7<\2\2\u0126\u0127\7c\2\2\u0127\u0128\7e\2\2\u0128\u0129\7v\2\2\u0129"+
		"\u012a\7k\2\2\u012a\u012b\7q\2\2\u012b\u012c\7p\2\2\u012c\66\3\2\2\2\u012d"+
		"\u012e\7q\2\2\u012e\u012f\7t\2\2\u012f8\3\2\2\2\u0130\u0131\7*\2\2\u0131"+
		"\u0132\7g\2\2\u0132\u0133\7z\2\2\u0133\u0134\7k\2\2\u0134\u0135\7u\2\2"+
		"\u0135\u0136\7v\2\2\u0136\u0137\7u\2\2\u0137:\3\2\2\2\u0138\u0139\7h\2"+
		"\2\u0139\u013a\7q\2\2\u013a\u013b\7t\2\2\u013b\u013c\7c\2\2\u013c\u013d"+
		"\7n\2\2\u013d\u013e\7n\2\2\u013e<\3\2\2\2\u013f\u0140\7y\2\2\u0140\u0141"+
		"\7j\2\2\u0141\u0142\7g\2\2\u0142\u0143\7p\2\2\u0143>\3\2\2\2\u0144\u0145"+
		"\7*\2\2\u0145\u0146\7?\2\2\u0146@\3\2\2\2\u0147\u0148\7r\2\2\u0148\u0149"+
		"\7t\2\2\u0149\u014a\7q\2\2\u014a\u014b\7d\2\2\u014b\u014c\7n\2\2\u014c"+
		"\u014d\7g\2\2\u014d\u014e\7o\2\2\u014eB\3\2\2\2\u014f\u0150\7<\2\2\u0150"+
		"\u0151\7f\2\2\u0151\u0152\7q\2\2\u0152\u0153\7o\2\2\u0153\u0154\7c\2\2"+
		"\u0154\u0155\7k\2\2\u0155\u0156\7p\2\2\u0156D\3\2\2\2\u0157\u0158\7<\2"+
		"\2\u0158\u0159\7q\2\2\u0159\u015a\7d\2\2\u015a\u015b\7l\2\2\u015b\u015c"+
		"\7g\2\2\u015c\u015d\7e\2\2\u015d\u015e\7v\2\2\u015e\u015f\7u\2\2\u015f"+
		"F\3\2\2\2\u0160\u0161\7<\2\2\u0161\u0162\7k\2\2\u0162\u0163\7p\2\2\u0163"+
		"\u0164\7k\2\2\u0164\u0165\7v\2\2\u0165H\3\2\2\2\u0166\u0167\7<\2\2\u0167"+
		"\u0168\7i\2\2\u0168\u0169\7q\2\2\u0169\u016a\7c\2\2\u016a\u016b\7n\2\2"+
		"\u016bJ\3\2\2\2\u016c\u016d\7<\2\2\u016d\u016e\7j\2\2\u016e\u016f\7v\2"+
		"\2\u016f\u0170\7p\2\2\u0170L\3\2\2\2\u0171\u0172\7<\2\2\u0172\u0173\7"+
		"j\2\2\u0173\u0174\7v\2\2\u0174\u0175\7p\2\2\u0175\u0176\7v\2\2\u0176\u0177"+
		"\7k\2\2\u0177N\3\2\2\2\u0178\u0179\7<\2\2\u0179\u017a\5S*\2\u017aP\3\2"+
		"\2\2\u017b\u017c\7A\2\2\u017c\u017d\5S*\2\u017dR\3\2\2\2\u017e\u0182\t"+
		"\2\2\2\u017f\u0181\t\3\2\2\u0180\u017f\3\2\2\2\u0181\u0184\3\2\2\2\u0182"+
		"\u0180\3\2\2\2\u0182\u0183\3\2\2\2\u0183T\3\2\2\2\u0184\u0182\3\2\2\2"+
		"\u0185\u0189\7=\2\2\u0186\u0188\n\4\2\2\u0187\u0186\3\2\2\2\u0188\u018b"+
		"\3\2\2\2\u0189\u0187\3\2\2\2\u0189\u018a\3\2\2\2\u018a\u018c\3\2\2\2\u018b"+
		"\u0189\3\2\2\2\u018c\u018e\t\4\2\2\u018d\u018f\t\4\2\2\u018e\u018d\3\2"+
		"\2\2\u018e\u018f\3\2\2\2\u018f\u0190\3\2\2\2\u0190\u0191\b+\2\2\u0191"+
		"V\3\2\2\2\u0192\u0194\t\5\2\2\u0193\u0192\3\2\2\2\u0194\u0195\3\2\2\2"+
		"\u0195\u0193\3\2\2\2\u0195\u0196\3\2\2\2\u0196\u0197\3\2\2\2\u0197\u0198"+
		"\b,\2\2\u0198X\3\2\2\2\7\2\u0182\u0189\u018e\u0195\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}